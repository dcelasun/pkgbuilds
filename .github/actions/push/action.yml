name: Push to AUR
inputs:
  pkgname:
    description: Package name
    required: true
  new-pkgver:
    description: New pkgver
    required: false
  new-pkgrel:
    description: New pkgrel
    required: false
  commit-msg:
    description: Commit message
    required: true

runs:
  using: "composite"
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        if [ -z "${{ inputs.pkgname }}" ]; then
          echo "::error ::pkgname is empty"
          exit 1
        fi
        if [ ! -d "${{ inputs.pkgname }}" ]; then
          echo "::error ::package ${{ inputs.pkgname }} does not exist"
          exit 1
        fi

        if [ -z "${{ inputs.new-pkgver }}" ] && [ -z "${{ inputs.new-pkgrel }}" ]; then
          echo "::error ::new-pkgver and new-pkgrel both empty"
          exit 1
        fi

        if [ ! -z "${{ inputs.new-pkgver }}" ]; then
          valid=$(printf "${{ inputs.new-pkgver }}" | awk 'match($0, "^([a-zA-Z0-9_.]+)$", arr) {print arr[1]}')
          if [ -z "$valid" ]]; then
            echo "::error ::pkgver can only contain letters, numbers, dots and underscores"
            exit 1
          fi
        fi
    - name: Push to AUR
      uses: KSXGitHub/github-actions-deploy-aur@2ac5a4c1d7035885d46b10e3193393be8460b6f1 # v4.1.1
      with:
        pkgname: ${{ inputs.pkgname }}
        pkgbuild: ./${{ inputs.pkgname }}/PKGBUILD
        assets: |
          ./${{ inputs.pkgname }}/*
        post_process: |
          git config --global gpg.format ssh
          git config --global user.signingkey ~/.ssh/aur
          git config --global commit.gpgsign true
        commit_username: ${{ secrets.GIT_USER }}
        commit_email: ${{ secrets.GIT_EMAIL }}
        ssh_private_key: ${{ secrets.SSH_KEY_PRIVATE }}
        commit_message: ${{ inputs.commit-msg }}
        ssh_keyscan_types: ed25519
