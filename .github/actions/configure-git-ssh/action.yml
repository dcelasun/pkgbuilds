name: Configure git and SSH with signing supports
inputs:
  ssh-priv-key:
    description: SSH private key
    required: true
  commit-user:
    description: User name
    required: true
  commit-email:
    description: User email
    required: true

runs:
  using: "composite"
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        if [ -z "${{ inputs.commit-email }}" ]; then
          echo "::error ::commit-email is empty"
          exit 1
        fi
        if [ -z "${{ inputs.commit-user }}" ]; then
          echo "::error ::commit-user is empty"
          exit 1
        fi
    - name: Configure SSH and git
      shell: bash
      run: |
        mkdir ~/.ssh
        echo "${{ inputs.ssh-priv-key }}" > ~/.ssh/github_aur
        chmod 600 ~/.ssh/github_aur
        ssh-keygen -f ~/.ssh/github_aur -y > ~/.ssh/github_aur.pub
        ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts
        cat >> ~/.ssh/config<< EOF
        Host aur.archlinux.org
            User aur
            IdentityFile ~/.ssh/github_aur
        EOF

        chmod 700 ~/.ssh
        find ~/.ssh -type f -exec chmod 600 {} \;

        ls -alh ~/.ssh
        cat ~/.ssh/known_hosts
        cat ~/.ssh/config

        eval $(ssh-agent -s)
        ssh-add ~/.ssh/github_aur

        git config --global gpg.format ssh
        git config --global user.signingkey ~/.ssh/github_aur.pub
        git config --global commit.gpgsign true
        git config --global user.email "${{ inputs.commit-email }}"
        git config --global user.name "${{ inputs.commit-user }}"