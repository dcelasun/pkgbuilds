name: updpkgsums and generate .SRCINFO
inputs:
  pkgname:
    description: Package name
    required: true
  new-pkgver:
    description: New pkgver
    required: false
  new-pkgrel:
    description: New pkgrel
    required: false
  skip-makepkg:
    description: |
      Skip makepkg, commit after updating PKGBUILD.
      Useful for large packages that can't be built on Github, like firefox-vaapi.
    default: 'no'

outputs:
  built:
    description: Whether package was successfully built
    value: ${{ inputs.skip-makepkg == 'no' && 'yes' || 'no' }}
runs:
  using: "composite"
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        if [ -z "${{ inputs.pkgname }}" ]; then
          echo "::error ::pkgname is empty"
          exit 1
        fi
        if [ ! -d "${{ inputs.pkgname }}" ]; then
          echo "::error ::package ${{ inputs.pkgname }} does not exist"
          exit 1
        fi

        if [ -z "${{ inputs.new-pkgver }}" ] && [ -z "${{ inputs.new-pkgrel }}" ]; then
          echo "::error ::new-pkgver and new-pkgrel both empty"
          exit 1
        fi

        if [ ! -z "${{ inputs.new-pkgver }}" ]; then
          valid=$(printf "${{ inputs.new-pkgver }}" | awk 'match($0, "^([a-zA-Z0-9_.]+)$", arr) {print arr[1]}')
          if [ -z "$valid" ]; then
            echo "::error ::pkgver can only contain letters, numbers, dots and underscores"
            exit 1
          fi
        fi
    - name: Load PGP keys
      id: pgp
      shell: bash
      run: |
        key=$(grep 'validpgpkeys' "${{ inputs.pkgname }}/.SRCINFO" | awk -F ' ' '{print $3}')
        if [ ! -z "$key" ]; then
          echo "key=$key" >> $GITHUB_OUTPUT
        fi
    - name: updpkgsums and generate .SRCINFO
      id: updpkgsums
      uses: dcelasun/archlinux-package-action@c53aa59f5808423989206e36b3b0ecf024b4f7f7 # v2.3.0
      with:
        path: ${{ inputs.pkgname }}
        updpkgsums: true
        srcinfo: true
        namcap: false
        aur: true
        pkgver: '${{ inputs.new-pkgver }}'
        pkgrel: '${{ inputs.new-pkgrel }}'
        flags: ${{ inputs.skip-makepkg == 'no' && '-cfs --noconfirm' || '' }}
        pgpkeys: ${{ steps.pgp.outputs.key }}
