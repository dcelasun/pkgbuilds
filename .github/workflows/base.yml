on:
  workflow_call:
    inputs:
      pkgname:
        type: string
        description: Package name
        required: true
      new-pkgver:
        type: string
        required: false
      new-pkgrel:
        type: string
        required: false
      publish-to-aur:
        type: string
        required: false
        default: 'no'
      skip-commit:
        type: string
        description: |
          If 'yes', don't make a new Github commit.
          Useful for pushing manual changes to AUR.
        default: 'no'
      skip-makepkg:
        type: string
        description: |
          Skip makepkg, commit after updating PKGBUILD.
          Useful for large packages that can't be build on Github, like firefox-vaapi.
        default: 'no'

jobs:
  do:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          ssh-key: ${{ secrets.SSH_KEY_PRIVATE }}
      - name: Validate inputs
        run: |
          if [ -z "${{ inputs.pkgname }}" ]; then
            echo "::error ::pkgname is empty"
            exit 1
          fi
          if [ ! -d "${{ inputs.pkgname }}" ]; then
            echo "::error ::package ${{ inputs.pkgname }} does not exist"
            exit 1
          fi

          if [ -z "${{ inputs.new-pkgver }}" ] && [ -z "${{ inputs.new-pkgrel }}" ]; then
            echo "::error ::new-pkgver and new-pkgrel both empty"
            exit 1
          fi

          if [ ! -z "${{ inputs.new-pkgver }}" ]; then
            valid=$(printf "${{ inputs.new-pkgver }}" | awk 'match($0, "^([a-zA-Z0-9_.]+)$", arr) {print arr[1]}')
            if [ -z "$valid" ]]; then
              echo "::error ::pkgver can only contain letters, numbers, dots and underscores"
              exit 1
            fi
          fi
      - name: Configure SSH and git
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_KEY_PRIVATE }}" > ~/.ssh/github_aur
          echo "${{ secrets.SSH_KEY_PUBLIC }}" > ~/.ssh/github_aur.pub
          ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts
          cat >> ~/.ssh/config<< EOF
          Host aur.archlinux.org
              User aur
              IdentityFile ~/.ssh/github_aur
          EOF

          chmod 700 ~/.ssh
          chmod -R 600 ~/.ssh/*

          eval $(ssh-agent -s)
          ssh-add ~/.ssh/github_aur

          ls -alh ~/.ssh
          cat ~/.ssh/known_hosts
          cat ~/.ssh/config

          git config --global gpg.format ssh
          git config --global user.signingkey ~/.ssh/github_aur.pub
          git config --global commit.gpgsign true
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USER }}"
      - name: "Update checksums & .SRCINFO"
        if: inputs.skip-commit == 'no' && (inputs.new-pkgver != '' || inputs.new-pkgrel != '')
        id: makepkg
        uses: dcelasun/archlinux-package-action@37a7b00ba9b402edce0bf04aa82229800eec516c # 24-May-2025
        with:
          path: ${{ inputs.pkgname }}
          updpkgsums: true
          srcinfo: true
          namcap: false
          pkgver: '${{ inputs.new-pkgver }}'
          pkgrel: '${{ inputs.new-pkgrel }}'
          flags: ${{ inputs.skip-makepkg == 'no' && '-cfs --noconfirm' || '' }}
      - name: Prepare commit message
        id: prep
        run: |
          pkgname="${{ inputs.pkgname }}"
          msg="Update to ${{ inputs.new-pkgver }}"
          if [ -z "${{ inputs.new-pkgver }}" ]; then
            msg="Bump pkgrel to ${{ inputs.new-pkgrel }}"
          fi
          msg="$(printf "[$pkgname] ${msg}\n\n[skip ci]")"

          # This ugliness is necessary to escape square brackets within the message
          # See comments of https://stackoverflow.com/a/74232400/879047
          echo "commit_msg<<EOF"$'\n'"$msg"$'\n'EOF >> $GITHUB_OUTPUT
      - name: Commit and push to Github
        if: steps.makepkg.outcome == 'success'
        id: commit
        run: |
          git commit -am "${{ steps.prep.outputs.commit_msg }}"
          git push
      - name: Push to AUR
        if: (steps.commit.outcome == 'success' || (inputs.skip-commit == 'yes' && steps.commit.outcome == 'skipped')) && inputs.publish-to-aur == 'yes'
        uses: KSXGitHub/github-actions-deploy-aur@2ac5a4c1d7035885d46b10e3193393be8460b6f1 # v4.1.1
        with:
          pkgname: ${{ inputs.pkgname }}
          pkgbuild: ./${{ inputs.pkgname }}/PKGBUILD
          assets: |
            ./${{ inputs.pkgname }}/*
          post_process: |
            git config --global gpg.format ssh
            git config --global user.signingkey ~/.ssh/aur
            git config --global commit.gpgsign true
          commit_username: ${{ secrets.GIT_USER }}
          commit_email: ${{ secrets.GIT_EMAIL }}
          ssh_private_key: ${{ secrets.SSH_KEY_PRIVATE }}
          commit_message: ${{ steps.prep.outputs.commit_msg }}
          ssh_keyscan_types: ed25519