name: Update any package
run-name: Update ${{ inputs.pkgname }} to ${{ inputs.pkgver }}${{ inputs.pkgrel != '' && '-' || '' }}${{ inputs.pkgrel }}
on:
  workflow_dispatch:
    inputs:
      pkgname:
        type: string
        required: true
        description: "Package name"
      pkgver:
        type: string
        required: false
        description: "pkgver"
      pkgrel:
        type: string
        required: false
        description: "pkgrel"
      skip-makepkg:
        type: choice
        required: true
        description: "Skip makepkg?"
        default: 'no'
        options:
          - 'yes'
          - 'no'
      publish:
        type: choice
        required: true
        description: "Publish to AUR?"
        default: 'yes'
        options:
          - 'yes'
          - 'no'

jobs:
  do:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          ssh-key: ${{ secrets.SSH_KEY_PRIVATE }}
      - name: Prepare commit message
        uses: ./.github/actions/prepare-commit-msg
        id: prep
        with:
          pkgname: ${{ env.PKGNAME }}
          new-pkgver: ${{ inputs.pkgver }}
          new-pkgrel: ${{ inputs.pkgrel }}
      - name: Update PKGBUILD and generate diff
        uses: ./.github/actions/updpkgsums
        id: update
        with:
          pkgname: ${{ env.PKGNAME }}
          new-pkgver: ${{ inputs.pkgver }}
          new-pkgrel: ${{ inputs.pkgrel }}
          skip-makepkg: ${{ inputs.skip-makepkg }}
      - name: Configure git and SSH
        uses: ./.github/actions/configure-git-ssh
        with:
          ssh-priv-key: ${{ secrets.SSH_KEY_PRIVATE }}
          commit-email: ${{ secrets.GIT_EMAIL }}
          commit-user: ${{ secrets.GIT_USER }}
      - name: Commit and push to Github
        uses: ./.github/actions/commit-and-push
        with:
          commit-msg: ${{ steps.prep.outputs.commit-msg }}
      - name: Push to AUR
        uses: ./.github/actions/push-to-aur
        if: inputs.publish == 'yes'
        with:
          pkgname: ${{ env.PKGNAME }}
          commit-msg: ${{ steps.prep.outputs.commit-msg }}
          new-pkgver: ${{ inputs.pkgver }}
          new-pkgrel: ${{ inputs.pkgrel }}
          ssh-priv-key: ${{ secrets.SSH_KEY_PRIVATE }}
          commit-email: ${{ secrets.GIT_EMAIL }}
          commit-user: ${{ secrets.GIT_USER }}